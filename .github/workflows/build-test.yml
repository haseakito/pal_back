name: Build Test

# defines when the events triggered
on:
    push:
        branches: [main]

    pull_request:
        branches: [main]

jobs:
    build:
        # defines a runner os
        runs-on: ubuntu-latest

        # defines a series of steps for this workflow
        steps:
            # Check out the repository
            - name: Checkout
              uses: actions/checkout@v3
            
            # Set up Python environment
            - name: Set up Python 3.10.12
              uses: actions/setup-python@v4
              with:
                python-version: '3.10'
                cache: 'pip'
            
            # Cache the dependencies
            - name: Cache dependencies
              uses: actions/cache@v3
              id: pip_cache_id
              with:            
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            # If there's no cache, install the dependencies
            - name: Install dependencies
              if: ${{ steps.pip_cache_id.outputs.cache-hit != true }}
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt  

            # Send success notification to Discord 
            - name: Discord Notification on Success
              if: ${{ success() }}
              uses: Ilshidur/action-discord@master
              env:
                DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              with:
                args: 'The Project Successfully build!:rocket:'

              # Send failure notification to Discord 
            - name: Discord Notification on Success
              if: ${{ failure() }}
              uses: Ilshidur/action-discord@master
              env:
                DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              with:
                args: 'The Project build Unsccessfull!:poop:'